{
    ENTRÉE dis "hello";
    SORS dis "goodbye"
}
sub answer renvoie Int est raw {
    42
}
ma class Frobnicate {
    a $.a = 666;
    sousméthode TWEAK {
        $!a = 42
    }
    multi méthode foo {
        dis sois.a
    }
}
dis Frobnicate.nouveau.foo;
ma $a = 41;
ma $b où * >= 666 = 666;
dis $b R/ $a;
dis 42 (elem) 1 .. 100;
si $a {
    $a++
}
ousi $b {
    meurs "That is not the right number!"
}
sinon {
    note "Shouldn't see this"
}
dis "incremented" si $a == answer;
avec $a {
    dis $a
}
ouavec $b {
    préviens "still not the right number"
}
étantdonné 666 {
    quand 42 {
        dis "the answer"
    }
    défaut {
        silencieusement préviens "No answer"
    }
}
non strict;
$c = 137;
dd $c.indent(4);
utilise strict;
ma @a = ^10;
dis @a.premier(* %% 2, :end);
ma %h = a => 666;
dis %h<a>:delete;
mets qq:to/HERE/;
heredoc
HERE
pour ^3 {
    .dis
}
.dis pour <a b c>;
boucle {
    dis "loop";
    dernier
}
ma énum KNOBS <left right up down>;
dis down;
ma sousens FOO de Int où * > 666;
ma FOO $foo = 1000;
dis $foo
