{
    EINTRITT sag "hello";
    VERLASSE sag "goodbye"
}
sub answer returns Int ist roh {
    42
}
mein klasse Frobnicate {
    hat $.a = 666;
    submethode TWEAK {
        $!a = 42
    }
    multi methode foo {
        sag selbst.a
    }
}
sag Frobnicate.neu.foo;
mein $a = 41;
mein $b wobei * >= 666 = 666;
sag $b U/ $a;
sag 42 (element) 1 .. 100;
wenn $a {
    $a++
}
sonstwenn $b {
    sterb "That is not the right number!"
}
sonst {
    notiere "Shouldn't see this"
}
sag "incremented" wenn $a == answer;
mit $a {
    sag $a
}
odermit $b {
    warne "still not the right number"
}
gegeben 666 {
    wann 42 {
        sag "the answer"
    }
    standard {
        leise warne "No answer"
    }
}
kein strict;
$c = 137;
dd $c.einzug(4);
verwende strict;
mein @a = ^10;
sag @a.erste(* %% 2, :vonende);
mein %h = a => 666;
sag %h<a>:entferne;
sag-es qq:to/HERE/;
heredoc
HERE
füralle ^3 {
    .sag
}
.sag füralle <a b c>;
schleife {
    sag "loop";
    letzte
}
mein enum KNOBS <left right up down>;
sag down;
mein subset FOO wie Int wobei * > 666;
mein FOO $foo = 1000;
sag $foo
